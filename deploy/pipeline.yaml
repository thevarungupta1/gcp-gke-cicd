steps:
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'us-central-docker.pkg.dev/sunlit-flag-424919-i3/gke-repo/quickstart-image', './app1' ]
  id: 'Build Docker Image'


- name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', 'us-central-docker.pkg.dev/sunlit-flag-424919-i3/gke-repo/quickstart-image' ]
  id: 'Push Docker Image'

- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'us-central-docker.pkg.dev/sunlit-flag-424919-i3/gke-repo/flask-image', './app2' ]
  id: 'Build Docker Image2'


- name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', 'us-central-docker.pkg.dev/sunlit-flag-424919-i3/gke-repo/flask-image' ]
  id: 'Push Docker Image2'

- name: 'google/cloud-sdk:latest'
  entrypoint: 'sh'
  args:
  - -xe
  - -c
  - |
    gcloud deploy apply --file deploy/pipeline.yaml --region=us-central1
    gcloud deploy apply --file deploy/dev.yaml --region=us-central1
    gcloud deploy apply --file deploy/prod.yaml --region=us-central1

    gcloud deploy releases create 'app1-release-${SHORT_SHA}' --delivery-pipeline-gke-cicd --region=us-central1 --from-k8s-manifest=./kubernetes/app1.yaml
    gcloud deploy releases create 'app2-release-${SHORT_SHA}' --delivery-pipeline-gke-cicd --region=us-central1 --from-k8s-manifest=./kubernetes/app2.yaml

options:
  logging: CLOUD_LOGGING_ONLY